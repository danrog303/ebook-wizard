name: ci

on:
  push:
  pull_request:

jobs:
  build_backend:
    name: Build backend
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
            java-version: '21'
            distribution: 'temurin'
            cache: maven
      
      # Installs "calibre" and "pandoc" libraries
      # They are required to run unit tests
      - name: Install Calibre requirements
        run: sudo apt-get update && sudo apt-get install -y libopengl0 libxcb-cursor0 libegl1
      - name: Install Calibre
        run: sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin          
      - name: Install Pandoc
        run: wget https://github.com/jgm/pandoc/releases/download/3.3/pandoc-3.3-1-amd64.deb && sudo dpkg -i pandoc-3.3-1-amd64.deb
        working-directory: /tmp
      
      - name: Configure Github Packages access
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: '[{"id": "github","configuration": {"httpHeaders": {"property": {"name": "Authorization","value": "Bearer ${{ secrets.GITHUB_TOKEN }}"}}}}]'

      - name: Build with Maven
        run: mvn clean verify
        working-directory: ./backend

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          files: ./backend/target/site/jacoco/jacoco.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend
          name: backend-ut-coverage
          fail_ci_if_error: true
          verbose: true

  build_frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Setup node.js environment
        uses: actions/setup-node@v1.4.4
        with:
          node-version: "20.x"

      - name: Install dependencies
        run: npm ci --force
        working-directory: ./frontend
          
      # - name: Run Unit Tests
      #   run: npm run ci:test

      # - name: Run codacy-coverage-reporter
      #   uses: codacy/codacy-coverage-reporter-action@master
      #   with:
      #     project-token: ${{ secrets.CODACY_CODE_COVERAGE_TOKEN }}
      #     coverage-reports: coverage/lcov.info
      
      - name: Build application
        run: npm run build
        working-directory: ./frontend
      
      - name: List files in distribution directory
        run: ls -R ./dist
        working-directory: ./frontend
        
